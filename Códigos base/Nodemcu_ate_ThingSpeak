#include <DHT.h>
#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>

#define DHTPIN D4 
#define DHTTYPE DHT11
#define S0 D7
#define S1 D6
#define S2 D5
#define SIG A0

DHT dht(DHTPIN, DHTTYPE);

int mix[3]={S2,S1,S0}; 
int valores_analogicos[8];
int luminosidade;
int umidade_solo;

byte  ci[8][3]={
  {0,0,0},
  {0,0,1},
  {0,1,0},
  {0,1,1},
  {1,0,0},
  {1,0,1},
  {1,1,0},  
  {1,1,1},
};

const char* ssid = "Meu ASUS";
const char* password = "verdeben10";
const char* server = "api.thingspeak.com";
const String apiKey = "UHNWT6Y81ITA6RG1"; // Obtida do ThingSpeak

WiFiClient client;

void setup() {
  Serial.begin(9600);
  pinMode(S0, OUTPUT);
  pinMode(S1, OUTPUT);
  pinMode(S2, OUTPUT);
  dht.begin();
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Conectando ao WiFi...");
  }
  Serial.println("Conectado");
}

void loop() {
  delay(2000); // Espere alguns segundos entre as leituras

  float umidade = dht.readHumidity(); // Leia a umidade
  float temperatura = dht.readTemperature(); // Leia a temperatura em graus Celsius

  Serial.print("Umidade: ");
  Serial.print(umidade);
  Serial.print("%\t");

  Serial.print("Temperatura: ");
  Serial.print(temperatura);
  Serial.println("°C");

  multiplex();

  for (int x=0; x<=7;x++){
    Serial.print("Pino ");
    Serial.print(x);
    Serial.print(" = ");
    Serial.println(valores_analogicos[x]);
  }
  Serial.println("");

  luminosidade = valores_analogicos[0];
  Serial.print("Luminosidade: ");
  Serial.println(valores_analogicos[0]);

  umidade_solo = valores_analogicos[1];
  Serial.print("Umidade do solo: ");
  Serial.println(valores_analogicos[1]);

  enviarParaThingSpeak(umidade, temperatura, luminosidade, umidade_solo);

  delay(2000); // Espere mais alguns segundos
}

//função de leitura
void multiplex(){
  for(int x=0; x<=7;x++){
    for(int y=0;y<=2;y++){
      digitalWrite(mix[y], ci[x][y]);
    }
    valores_analogicos[x] = analogRead(SIG);
  }
}

void enviarParaThingSpeak(float umidade, float temperatura, int luminosidade, int umidade_solo){
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    String url = "http://"+ String(server) + "/update?api_key=" + apiKey + "&field1=" + String(umidade) + "&field2=" + String(temperatura) + "&field3=" + String(luminosidade) + "&field4=" + String(umidade_solo);
    http.begin(client, url); // Ajuste aqui
    int httpCode = http.GET();
    if (httpCode > 0) {
      String payload = http.getString();
      Serial.println(payload);
    }
    http.end();
  }
}


